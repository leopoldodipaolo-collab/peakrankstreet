"""Aggiunta tabella Commenti

Revision ID: e818d465bdc4
Revises: 647d89be1a6f
Create Date: 2025-10-15 16:41:48.260376

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e818d465bdc4'
down_revision = '647d89be1a6f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('challenge', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenge_challenge_type'))
        batch_op.drop_index(batch_op.f('ix_challenge_created_at'))
        batch_op.drop_index(batch_op.f('ix_challenge_created_by'))
        batch_op.drop_index(batch_op.f('ix_challenge_end_date'))
        batch_op.drop_index(batch_op.f('ix_challenge_is_active'))
        batch_op.drop_index(batch_op.f('ix_challenge_name'))
        batch_op.drop_index(batch_op.f('ix_challenge_route_id'))
        batch_op.drop_index(batch_op.f('ix_challenge_start_date'))

    op.drop_table('challenge')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('challenge',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('route_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('challenge_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('bet_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('custom_bet', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('bet_value', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('challenge_created_by_fkey')),
    sa.ForeignKeyConstraint(['route_id'], ['Routes.id'], name=op.f('challenge_route_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('challenge_pkey'))
    )
    with op.batch_alter_table('challenge', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenge_start_date'), ['start_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_route_id'), ['route_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_end_date'), ['end_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_created_by'), ['created_by'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_challenge_challenge_type'), ['challenge_type'], unique=False)

    # ### end Alembic commands ###
